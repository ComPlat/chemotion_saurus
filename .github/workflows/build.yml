name: build CI

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
#  build:
#    # The type of runner that the job will run on
#    runs-on: ubuntu-latest
##    container: node:12.18.3
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
## Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v2
#      - env:
#          ALGOLIA_ADMIN_API_KEY: ${{ secrets.ALGOLIA_ADMIN_API_KEY }}
#          ALGOLIA_APP_ID: ${{ secrets.ALGOLIA_APP_ID }}
#          ALGOLIA_SEARCH_API_KEY: ${{ secrets.ALGOLIA_SEARCH_API_KEY }}
#          INDEX_NAME: ${{ secrets.INDEX_NAME }}
##          DEPLOY: ${{ secrets.DEPLOY }}
##          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
#        run: |
#          npm ci
#          npm run build --if-present
#          mkdir chemotion_saurus
#          mv ./build ./public
#          { . $DEPLOY ; } 1> /dev/null
#          mkdir chemotion_saurus
#          mv ./build ./public
#          takes too long
#          npm run serve
  deploy:
    runs-on: ubuntu-latest
#    needs: build
    steps:
      #        uses: easingthemes/ssh-deploy@v2
    - name: Deploy
#      uses: appleboy/ssh-action@master
      with:
#        host: ${{ secrets.HOST }}
#        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        host: ${{ secrets.HOST }}

        username: "docusaurus"
#        username: "prod"
#        port: ${{ secrets.PORT }}
        run: |
          set -euo pipefail
          eval $(ssh-agent -s);
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
#          whoami
#          scp -r  -o StrictHostKeyChecking=no  ./public/* docusaurus@eln.chemotion.net:chemotion_saurus/.
#        echo "$ENCRYPTION_KEY"
#        echo ${#ENCRYPTION_KEY} # working?
#        echo ${{ secrets.ENCRYPTION_KEY }}
#            mkdir chemotion_saurus
#            mv ./build ./public
#            { . $DEPLOY ; } 1> /dev/null
